<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>  

<style>
html,
body,
.entire{
	width: 100%;
	height: 100%;
}

.part{
		height: 100%;
}

#eva_map{
	position:relative;
	height: 100%;
}

.home_reg_btn{
	position:absolute;
	z-index: 90;
}

.eva_search{
	position: absolute;
	z-index: 90;
	top: 100px;
}
.marker_list{
	background-color: yellow;
	height: 100%;
}

</style>

<div class="entire">
	<div class="part row">
		<!-- 지도 부분 -->
		<div id="eva_map" class="col-10">
			<div>
				<!-- 내 집 등록 버튼 -->
				<button class="home_reg_btn btn btn-dark" onclick="fn_getUserAdd()">내 집 등록</button>
			</div>
			<!-- 주소 검색창 -->
			<div class="eva_search">
				<input type="text">
			</div>
		</div>
		<!-- 마커 목록 부분 -->
		<div class="col-2 marker_list">
			
		</div>
	</div>
</div>
<!-- 카카오 맵 -->
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=cbe4f64d0e9315cf34ab23484183cd12&libraries=services"></script>
<!-- daum 주소 api -->
<script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
<script type="text/javascript">
	// 카카오 맵
	var mapContainer = document.getElementById('eva_map'),
	mapOptions = {
	     center: new kakao.maps.LatLng(36.326725, 127.407470),
	     level: 3
	};
	// 맵 생성하고 div에 뿌리기
	var map = new kakao.maps.Map(mapContainer, mapOptions);
	
	// 주소-좌표 변환 객체를 생성합니다
	var geocoder = new kakao.maps.services.Geocoder();
	
	// 파라미터로 주소를 입력받고
	// 그 주소에 마커 찍기
	function fn_signMarker(addr, title) {
		// 주소로 좌표를 검색합니다
		geocoder.addressSearch(addr, function(result, status) {

		    // 정상적으로 검색이 완료됐으면 
		     if (status === kakao.maps.services.Status.OK) {

		        var coords = new kakao.maps.LatLng(result[0].y, result[0].x);

		        // 결과값으로 받은 위치를 마커로 표시합니다
		        console.log("coords.La : ", coords.La);
		        console.log("coords.Ma : ", coords.Ma);
		        var marker = new kakao.maps.Marker({
		            map: map,
		            position: coords
		        });
				
		     	// 마커 값을 가지고 데이터를 가지고 가서 db에 저장해야함
		     	// (위도, 경도, 건물명(타이틀), 주소)
		     	fn_registeMarkerAjax(coords.La, coords.Ma, title, addr);
		     	
		        // 인포윈도우로 장소에 대한 설명을 표시합니다
		        var infowindow = new kakao.maps.InfoWindow({
		            content: '<div style="width:150px;text-align:center;padding:6px 0;">' + title + '</div>'
		        });
		        infowindow.open(map, marker);

		        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
		        map.setCenter(coords);
		    } 
		});
	};
	    
	// 다음 주소 API
	function fn_getUserAdd() {
		// 마커에 간단한 정보를 등록할 창 띄워줌(마커 이미지는 관리자만 건들 수 있게 할까?)
		let title = prompt("건물명을 입력해주세요!");
		
		new daum.Postcode({
			oncomplete : function(data) {
				// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

				// 각 주소의 노출 규칙에 따라 주소를 조합한다.
				// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
				var addr = ''; // 주소 변수
				var extraAddr = ''; // 참고항목 변수

				//사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
				if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
					addr = data.roadAddress;
				} else { // 사용자가 지번 주소를 선택했을 경우(J)
					addr = data.jibunAddress;
				}

				// 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.
				if (data.userSelectedType === 'R') {
					// 법정동명이 있을 경우 추가한다. (법정리는 제외)
					// 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
					if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {
						extraAddr += data.bname;
					}
					// 건물명이 있고, 공동주택일 경우 추가한다.
					if (data.buildingName !== '' && data.apartment === 'Y') {
						extraAddr += (extraAddr !== '' ? ', '
								+ data.buildingName : data.buildingName);
					}
					// 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
					if (extraAddr !== '') {
						extraAddr = ' (' + extraAddr + ')';
					}
					// 조합된 참고항목을 해당 필드에 넣는다.
					// document.getElementById("sample6_extraAddress").value = extraAddr;
					console.log("extraAddr : ", extraAddr);
				} else {
					// document.getElementById("sample6_extraAddress").value = '';
				}

				// 우편번호와 주소 정보를 해당 필드에 넣는다.
				// document.getElementById('sample6_postcode').value = data.zonecode;
				// document.getElementById("sample6_address").value = addr;
				console.log("data.zonecode : ", data.zonecode);
				console.log("addr : ", addr);
				
				// TODO 여기서 회원가입시 주소값과 같은지 판별하고 >> 서버 갔다와야겠지?
				
				// 마커를 지도에 표시 함수, db에 저장
				fn_signMarker(addr, title);
			}
		}).open();
	};
	
	// ajax로 마커 등록하기
	function fn_registeMarkerAjax(La, Ma, title, addr) {
		$.ajax({
			url : "<c:url value='/evaluation/registeMarker'/>"
			,type : "post"
			,data : {"markerLat" : La, "markerLongt" : Ma, 
					  "markerLocation" : title, "markerAdd" : addr,
					   "markerRegId" : 'hgp'}	// MARKER_REG_ID는 나중에서 세션에서 가져올것
			,success : function(data) {
				// 서버에서 오류 발생
				if(data == false){
					alert("서버에서 정상적으로 등록하지 못했습니다. 전산실에 문의해주세요 010-4403-9382")
				}
				alert("마커 등록 완료");
			}
			,error : function(request, status, error) {
		        console.log("code: " + request.status);
		        console.log("message: " + request.responseText);
		        console.log("error: " + error);
		        alert("마커를 정상적으로 등록하지 못했습니다. 전산실에 문의해주세요 010-4403-9382");
			}
		});
	};
</script>